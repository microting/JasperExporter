plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'io.freefair.lombok' version '6.3.0'
    id 'com.adarshr.test-logger' version '3.1.0'
}

repositories {
    mavenCentral()
    maven {
        url "http://jasperreports.sourceforge.net/maven2"
        allowInsecureProtocol = true
    }
    maven {
        url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts"
        allowInsecureProtocol = true
    }
    maven {
        url "https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts"
    }
}

dependencies {
    implementation project(":fonts"),
            'net.sf.jasperreports:jasperreports',
            'commons-io:commons-io',
            'xalan:xalan',
            'org.apache.poi:poi',
            'org.apache.logging.log4j:log4j-1.2-api',
            'org.apache.logging.log4j:log4j-core',
            'org.apache.commons:commons-lang3'

    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.build.dependsOn tasks.shadowJar

shadowJar {
    baseName = 'JasperExporter'
    classifier = null
    version = null
    manifest {
        attributes(
                "Main-Class": "com.microting.report.jasper.JasperExporter")
    }
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
    exclude "**/Log4j2Plugins.dat"
    append 'jasperreports_extension.properties'
}

import static org.gradle.api.tasks.testing.logging.TestExceptionFormat.*
import static org.gradle.api.tasks.testing.logging.TestLogEvent.*

test {
    useJUnitPlatform()

    testLogging {
        events FAILED,
                PASSED,
                SKIPPED
        exceptionFormat FULL
        showExceptions true
        showCauses true
        showStackTraces true

        debug {
            events STARTED,
                    FAILED,
                    PASSED,
                    SKIPPED,
                    STANDARD_ERROR,
                    STANDARD_OUT
            exceptionFormat FULL
            showExceptions true
            showCauses true
            showStackTraces true
        }

        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat
    }
}